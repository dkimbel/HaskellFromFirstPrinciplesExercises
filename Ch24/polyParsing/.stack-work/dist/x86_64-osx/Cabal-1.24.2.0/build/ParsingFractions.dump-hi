
==================== FINAL INTERFACE ====================
2017-08-21 16:07:10.961584 UTC

interface parsingFractions-0.1.0.0-4AxwU3CtmCnG4X8uzrvy08:ParsingFractions 8002
  interface hash: b84636455088091abacd8d77b8173c95
  ABI hash: 9cee81f375be9630a0000497167dd526
  export-list hash: 47519700d8965267060abf8fef9db47b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6fc74547fbd72660fbdc96d0ba10d9b2
  sig of: Nothing
  used TH splices: False
  where
exports:
  ParsingFractions.main
  ParsingFractions.one
  ParsingFractions.one'
  ParsingFractions.oneThruThree
  ParsingFractions.oneThruThree'
  ParsingFractions.oneTwo
  ParsingFractions.oneTwo'
  ParsingFractions.pNL
  ParsingFractions.stop
  ParsingFractions.stringParse
  ParsingFractions.testParse
module dependencies:
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-6nMo9ca9E95L1lsN6Br4XL
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-A79v826bgPr574HtaZPPqC
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-8bUdsjh6UCE83aHCxOEHna
                      base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      charset-0.3.7.1@charset-0.3.7.1-8XzlqAFUmfXDSOZRmiDkgy
                      comonad-5.0.1@comonad-5.0.1-2dOTQljdUSmGwatNHkYwW3
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.2@distributive-0.5.2-KlkgfUmuqy3Z181VSjKfJ
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fingertree-0.1.1.0@fingertree-0.1.1.0-Aiaf912zjZGHvH3XyjxrYA
                      free-4.12.4@free-4.12.4-JUYfwQOGje1F6ljlwhsQfP
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      kan-extensions-5.0.2@kan-extensions-5.0.2-5SVDrYVManyKLFvHkx6yaS
                      lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      parsers-0.12.5@parsers-0.12.5-GnYuXhr66xHG7QyPR4udRA
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      profunctors-5.2@profunctors-5.2-7ONvCmXw8M9Co9mYrudYx
                      reducers-3.12.1@reducers-3.12.1-9f8Ic9ruWZ1FsGrCfB0ZLr
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      scientific-0.3.5.1@scientific-0.3.5.1-JHsAAp34Yyd8e5v3sK3O5Q
                      semigroupoids-5.2@semigroupoids-5.2-8RI6HtO1LKLE496qmzB9Po
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-abstraction-0.2.3.0@th-abstraction-0.2.3.0-IC8R8TEnxiaENlxvcI4gyL
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      trifecta-1.6.2.1@trifecta-1.6.2.1-ErZ9MJa2zIqLpxrGHQVKNm
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         reducers-3.12.1@reducers-3.12.1-9f8Ic9ruWZ1FsGrCfB0ZLr:Data.Semigroup.Instances
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         trifecta-1.6.2.1@trifecta-1.6.2.1-ErZ9MJa2zIqLpxrGHQVKNm:Text.Trifecta.Instances
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-6nMo9ca9E95L1lsN6Br4XL:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-8bUdsjh6UCE83aHCxOEHna:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Fix
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-5j5AtkN8t5O1W8mEe1pi0q:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.2@kan-extensions-5.0.2-5SVDrYVManyKLFvHkx6yaS:Data.Functor.Day
                         kan-extensions-5.0.2@kan-extensions-5.0.2-5SVDrYVManyKLFvHkx6yaS:Data.Functor.Yoneda
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.At
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Internal.Indexed
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Reified
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Tuple
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Wrapped
                         lens-4.15.3@lens-4.15.3-5Jg3WKTSlS050icgk0CLIX:Control.Lens.Zoom
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         profunctors-5.2@profunctors-5.2-7ONvCmXw8M9Co9mYrudYx:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-abstraction-0.2.3.0@th-abstraction-0.2.3.0-IC8R8TEnxiaENlxvcI4gyL:Language.Haskell.TH.Datatype
                         trifecta-1.6.2.1@trifecta-1.6.2.1-ErZ9MJa2zIqLpxrGHQVKNm:Text.Trifecta.Delta
                         trifecta-1.6.2.1@trifecta-1.6.2.1-ErZ9MJa2zIqLpxrGHQVKNm:Text.Trifecta.Rendering
                         trifecta-1.6.2.1@trifecta-1.6.2.1-ErZ9MJa2zIqLpxrGHQVKNm:Text.Trifecta.Rope
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  parsers-0.12.5@parsers-0.12.5-GnYuXhr66xHG7QyPR4udRA:Text.Parser.Char 02119161c21303a8e6e8e1424fbf0522
import  -/  parsers-0.12.5@parsers-0.12.5-GnYuXhr66xHG7QyPR4udRA:Text.Parser.Combinators a777f7af1d33b1aa90bf146480f9c826
import  -/  trifecta-1.6.2.1@trifecta-1.6.2.1-ErZ9MJa2zIqLpxrGHQVKNm:Text.Trifecta 0a6f21b55919d63da58a1e1018300625
import  -/  trifecta-1.6.2.1@trifecta-1.6.2.1-ErZ9MJa2zIqLpxrGHQVKNm:Text.Trifecta.Parser 5b90489d47f3ee6b8d3fe0ceabdcd207
ebf8fe016a099b643bb2a9f4d663d375
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   ParsingFractions.$trModule2
                   ParsingFractions.$trModule1) -}
50858ebceed120cdd493598539092088
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ParsingFractions"#) -}
c59726bfd3e4a4c3a729c3eabe396d61
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "parsingFractions-0.1.0.0-4AxwU3CtmCnG4X8uzrvy08"#) -}
21cf7eed03cd4e8fdbc1d47c53b1dfc5
  $wone ::
    (Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Types.Char
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 7,
     Strictness: <L,1*C1(U)><L,C(C1(C(U)))><S,U><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
c55acef97f62b2009494155c6b0fd042
  $woneThruThree ::
    (GHC.Base.String
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Base.String
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 3, Strictness: <L,C(C1(U))><L,C(U)><L,C(U)>, Inline: [0],
     Unfolding: (\ @ r
                   (w :: GHC.Base.String
                         -> Text.Trifecta.Result.Err
                         -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w1 :: Text.Trifecta.Result.Err
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w2 :: GHC.Base.String
                          -> Data.Set.Base.Set GHC.Base.String
                          -> Text.Trifecta.Delta.Delta
                          -> Data.ByteString.Internal.ByteString
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r) ->
                 let {
                   lvl18 :: Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
                   = w1 ParsingFractions.oneThruThree5
                 } in
                 let {
                   lvl19 :: Data.Set.Base.Set GHC.Base.String
                            -> Text.Trifecta.Delta.Delta
                            -> Data.ByteString.Internal.ByteString
                            -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
                   = w2 ParsingFractions.main24
                 } in
                 ParsingFractions.oneThruThree_ds2
                   `cast`
                 (Text.Trifecta.Parser.N:Parser[0] <()>_R)
                   @ r
                   (\ (ds2 :: ()) (e :: Text.Trifecta.Result.Err) ->
                    w ParsingFractions.main24
                      (case e of wild4 { Text.Trifecta.Result.Err ds1 ds4 ds3 ds5 ->
                       case ds1 of wild {
                         GHC.Base.Nothing -> wild4
                         GHC.Base.Just ipv
                         -> Text.Trifecta.Result.Err
                              wild
                              ds4
                              ParsingFractions.oneThruThree2
                              ds5 } }))
                   (\ (e :: Text.Trifecta.Result.Err) ->
                    w1
                      (case e of wild { Text.Trifecta.Result.Err ds1 ds2 ds3 ds4 ->
                       Text.Trifecta.Result.Err
                         ds1
                         ds2
                         ParsingFractions.oneThruThree2
                         ds4 }))
                   (\ (ds2 :: ()) -> lvl19)
                   (\ (ds4 :: Text.Trifecta.Result.ErrInfo) -> lvl18)) -}
9092b8e1e0d241521e5cc39228f46614
  $woneTwo ::
    (Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Types.Char
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 7,
     Strictness: <L,1*C1(U)><L,C(C1(C(U)))><S,U><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
0c4f450a5a175f5ef445cb5ea90d93b2
  $woneTwo1 ::
    (Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Types.Char
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 7,
     Strictness: <L,1*C1(U)><L,C(C1(C(U)))><S,U><L,U><L,U><L,U><S,U>,
     Inline: [0] -}
48e2dc2e2bbfb8bbdd6d9d41bfae24d9
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
c895c9a2c464d351b30928145f1b4324
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        ParsingFractions.main25
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ParsingFractions.main23
                        (ParsingFractions.main3 @ GHC.Types.Char)
                          `cast`
                        (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        ParsingFractions.main21
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ParsingFractions.main23
                        ParsingFractions.main18
                          `cast`
                        (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        ParsingFractions.main19
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case ParsingFractions.main23
                        (ParsingFractions.main17 @ GHC.Types.Char)
                          `cast`
                        (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        ParsingFractions.main15
                        GHC.Types.True
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case ParsingFractions.main23
                        ParsingFractions.main9
                          `cast`
                        (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        ParsingFractions.main12
                        GHC.Types.True
                        ipv14 of ds9 { (#,#) ipv16 ipv17 ->
                 ParsingFractions.main23
                   (ParsingFractions.main2 @ GHC.Types.Char)
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))
                   ipv16 } } } } } } } } }) -}
af19cb7fb9d4ba207c93aa0922c3ccc5
  main10 ::
    (GHC.Types.Char
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Types.Char
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6,
     Strictness: <L,A><L,1*C1(U)><L,C(C1(C(U)))><L,A><S,U><S(LLLS),1*U(U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ r
                   (w :: GHC.Types.Char
                         -> Text.Trifecta.Result.Err
                         -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w1 :: Text.Trifecta.Result.Err
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w2 :: GHC.Types.Char
                          -> Data.Set.Base.Set GHC.Base.String
                          -> Text.Trifecta.Delta.Delta
                          -> Data.ByteString.Internal.ByteString
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w3 :: Text.Trifecta.Result.ErrInfo
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w4 :: Text.Trifecta.Delta.Delta)
                   (w5 :: Data.ByteString.Internal.ByteString) ->
                 case w5 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 ParsingFractions.$woneTwo @ r w1 w2 w4 ww1 ww2 ww3 ww4 }) -}
e109362d18d5218889f1247011141c51
  main11 ::
    (GHC.Types.Char
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Types.Char
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6,
     Strictness: <L,A><L,1*C1(U)><L,C(C1(C(U)))><L,A><S,U><S(LLLS),1*U(U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ r
                   (w :: GHC.Types.Char
                         -> Text.Trifecta.Result.Err
                         -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w1 :: Text.Trifecta.Result.Err
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w2 :: GHC.Types.Char
                          -> Data.Set.Base.Set GHC.Base.String
                          -> Text.Trifecta.Delta.Delta
                          -> Data.ByteString.Internal.ByteString
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w3 :: Text.Trifecta.Result.ErrInfo
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w4 :: Text.Trifecta.Delta.Delta)
                   (w5 :: Data.ByteString.Internal.ByteString) ->
                 case w5 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 ParsingFractions.$woneTwo1 @ r w1 w2 w4 ww1 ww2 ww3 ww4 }) -}
ca156e2b9be0a06ef4ed15089c0ba68d
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   ParsingFractions.main14
                   ParsingFractions.main13) -}
e8c612a5a380638b5149e7148d5a7958
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "oneTwo':"#) -}
a1a841d201691ce01e4d86c324a05a5c
  main14 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '\n'#) -}
bcca809acca52a723c832dbbd3243d50
  main15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   ParsingFractions.main14
                   ParsingFractions.main16) -}
9374cddf7801547302c39e77f0d81fd2
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "oneTwo:"#) -}
b43aff71e581af4b67643fb5dac60177
  main17 ::
    (a
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (a
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6,
     Unfolding: (\ @ a ->
                 Text.Trifecta.Parser.$fApplicativeParser2
                   @ GHC.Types.Char
                   @ a
                   ParsingFractions.main18
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))
                   (ParsingFractions.main3 @ a)
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <a>_R))) -}
767f606304d6cf8284f66bb16467d6d9
  main18 ::
    (GHC.Types.Char
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Types.Char
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6,
     Strictness: <L,A><L,1*C1(U)><L,C(C1(C(U)))><L,A><S,U><S(LLLS),1*U(U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, False)
                (\ @ r
                   (w :: GHC.Types.Char
                         -> Text.Trifecta.Result.Err
                         -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w1 :: Text.Trifecta.Result.Err
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w2 :: GHC.Types.Char
                          -> Data.Set.Base.Set GHC.Base.String
                          -> Text.Trifecta.Delta.Delta
                          -> Data.ByteString.Internal.ByteString
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w3 :: Text.Trifecta.Result.ErrInfo
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w4 :: Text.Trifecta.Delta.Delta)
                   (w5 :: Data.ByteString.Internal.ByteString) ->
                 case w5 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 ParsingFractions.$wone @ r w1 w2 w4 ww1 ww2 ww3 ww4 }) -}
384270f852addcb42fd37994d7665857
  main19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   ParsingFractions.main14
                   ParsingFractions.main20) -}
4ab778592e4102913c6d2faed38bc893
  main2 ::
    (a
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (a
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6,
     Unfolding: (\ @ a ->
                 Text.Trifecta.Parser.$fApplicativeParser2
                   @ GHC.Types.Char
                   @ a
                   ParsingFractions.main9
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))
                   (ParsingFractions.main3 @ a)
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <a>_R))) -}
50f6e81a642c4adf59cdb1aea02ae7d6
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "one':"#) -}
4a201d49c352a131115c66787776432d
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   ParsingFractions.main14
                   ParsingFractions.main22) -}
211af90fd45ca53834bcaa3844e76a01
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "one:"#) -}
dd4cc9ccb41f61a5360ab68156c7374b
  main23 ::
    Text.Trifecta.Parser.Parser GHC.Types.Char
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,C(C1(C1(C1(C1(C1(U))))))><S,U>,
     Unfolding: (\ (p :: Text.Trifecta.Parser.Parser GHC.Types.Char)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (Text.Trifecta.Result.$fShowResult_$cshow
                      @ GHC.Types.Char
                      GHC.Show.$fShowChar
                      (Text.Trifecta.Parser.parseString
                         @ GHC.Types.Char
                         p
                         Text.Trifecta.Delta.$fMonoidDelta_$cmempty
                         ParsingFractions.main24))
                   GHC.Types.True
                   eta) -}
8ea3537a0a7870581da475ce135ed4df
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "123"#) -}
ea853a65d99f5e1d3db0e09d53face96
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   ParsingFractions.main14
                   ParsingFractions.main26) -}
f66f37173146f218a13b04ba7b809e0a
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stop:"#) -}
29809c090148394b3bcd462c9df12eb2
  main3 ::
    (a
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (a
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6, Strictness: <L,A><C(S),1*C1(U)><L,A><L,A><L,A><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (6, True, True)
                (\ @ a
                   @ r
                   (w :: a
                         -> Text.Trifecta.Result.Err
                         -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w1 :: Text.Trifecta.Result.Err
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w2 :: a
                          -> Data.Set.Base.Set GHC.Base.String
                          -> Text.Trifecta.Delta.Delta
                          -> Data.ByteString.Internal.ByteString
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w3 :: Text.Trifecta.Result.ErrInfo
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w4 :: Text.Trifecta.Delta.Delta)
                   (w5 :: Data.ByteString.Internal.ByteString) ->
                 w1 ParsingFractions.main4) -}
3f47bd9a06848e05fc02fa4b137f1777
  main4 :: Text.Trifecta.Result.Err
  {- Unfolding: (Text.Trifecta.Result.Err
                   ParsingFractions.main5
                   (GHC.Types.[] @ Text.PrettyPrint.ANSI.Leijen.Doc)
                   (Data.Set.Base.Tip @ [GHC.Types.Char])
                   (GHC.Types.[] @ Text.Trifecta.Delta.Delta)) -}
c4b10910c795bca86a172d4d80b82a9b
  main5 :: GHC.Base.Maybe Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (GHC.Base.Just
                   @ Text.PrettyPrint.ANSI.Leijen.Doc
                   ParsingFractions.main6) -}
f23d0da7c0dd639bbd03ddf79b245b98
  main6 :: Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (case Data.OldList.wordsFB
                        @ [Text.PrettyPrint.ANSI.Leijen.Doc]
                        ParsingFractions.main8
                        (GHC.Types.[] @ Text.PrettyPrint.ANSI.Leijen.Doc)
                        ParsingFractions.main7 of wild {
                   [] -> Text.PrettyPrint.ANSI.Leijen.Empty
                   : ipv ipv1 -> Text.PrettyPrint.ANSI.Leijen.fillSep_go wild }) -}
b4f7addc5413a10140a290c454aa569a
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "unexpected "#
                   ParsingFractions.main_s) -}
c8e23a8c4b2ee32d4a7bb8687a9d82c2
  main8 ::
    [GHC.Types.Char]
    -> [Text.PrettyPrint.ANSI.Leijen.Doc]
    -> [Text.PrettyPrint.ANSI.Leijen.Doc]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (x :: [GHC.Types.Char])
                   (ys :: [Text.PrettyPrint.ANSI.Leijen.Doc])[OneShot] ->
                 GHC.Types.:
                   @ Text.PrettyPrint.ANSI.Leijen.Doc
                   (Text.PrettyPrint.ANSI.Leijen.string x)
                   ys) -}
05d74c967952d89d2b5d25683cd6a4c4
  main9 ::
    (GHC.Types.Char
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Types.Char
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 6,
     Unfolding: (Text.Trifecta.Parser.$fApplicativeParser2
                   @ GHC.Types.Char
                   @ GHC.Types.Char
                   ParsingFractions.main11
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))
                   ParsingFractions.main10
                     `cast`
                   (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R))) -}
41eac81ec541aec9f200a959e4767df2
  main_s :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "stop"#) -}
ecb16667c3aab52dbf6fa50ad89558ce
  one :: Text.Trifecta.Parser.Parser GHC.Types.Char
  {- Arity: 6,
     Strictness: <L,A><L,1*C1(U)><L,C(C1(C(U)))><L,A><S,U><S(LLLS),1*U(U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.main18
                  `cast`
                (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R)) -}
917b6a4b0c25126cf96c74d22ba10c7c
  one' :: Text.Trifecta.Parser.Parser a
  {- Arity: 6,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.main17
                  `cast`
                (forall (a :: <*>_N).
                 Sym (Text.Trifecta.Parser.N:Parser[0] <a>_R)) -}
d3747303e1f7ba3588054dee43357f6f
  oneThruThree :: Text.Trifecta.Parser.Parser GHC.Base.String
  {- Arity: 4, Strictness: <L,C(C1(U))><L,C(U)><L,C(U)><L,A>,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.oneThruThree1
                  `cast`
                (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Base.String>_R)) -}
6a540dcc456a0a149b3d4f6c45b6a5b1
  oneThruThree' :: Text.Trifecta.Parser.Parser GHC.Base.String
  {- Unfolding: (ParsingFractions.oneThruThree'_go
                   ParsingFractions.oneThruThree'1) -}
3d4de406b9a429cd9756b9ac7f4be691
  oneThruThree'1 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   ParsingFractions.oneThruThree'6
                   ParsingFractions.oneThruThree'2) -}
91d83bcd42d9a147bcf2d186cbce493c
  oneThruThree'2 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   ParsingFractions.oneThruThree'5
                   ParsingFractions.oneThruThree'3) -}
5464dc1cf2acffba197cf4acc284b8eb
  oneThruThree'3 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   ParsingFractions.oneThruThree'4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1ba2e8da5801b8b2eb2b25677a76eba6
  oneThruThree'4 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '3'#) -}
602c638225f2ea6a6099d097e2d61167
  oneThruThree'5 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '2'#) -}
38d84d61fef8ef59889c2cb419dc748b
  oneThruThree'6 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '1'#) -}
1ca1ebedec601a8fb61efd2053642d52
  oneThruThree'_go ::
    [GHC.Types.Char] -> Text.Trifecta.Parser.Parser [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
2cabe22ba8c4ac6a066ac01e1995c26d
  oneThruThree1 ::
    (GHC.Base.String
     -> Text.Trifecta.Result.Err
     -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.Err
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (GHC.Base.String
        -> Data.Set.Base.Set GHC.Base.String
        -> Text.Trifecta.Delta.Delta
        -> Data.ByteString.Internal.ByteString
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> (Text.Trifecta.Result.ErrInfo
        -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
    -> Text.Trifecta.Delta.Delta
    -> Data.ByteString.Internal.ByteString
    -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r
  {- Arity: 4, Strictness: <L,C(C1(U))><L,C(U)><L,C(U)><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ r
                   (w :: GHC.Base.String
                         -> Text.Trifecta.Result.Err
                         -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w1 :: Text.Trifecta.Result.Err
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w2 :: GHC.Base.String
                          -> Data.Set.Base.Set GHC.Base.String
                          -> Text.Trifecta.Delta.Delta
                          -> Data.ByteString.Internal.ByteString
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r)
                   (w3 :: Text.Trifecta.Result.ErrInfo
                          -> Text.Trifecta.Util.It.It Text.Trifecta.Rope.Rope r) ->
                 ParsingFractions.$woneThruThree @ r w w1 w2) -}
363dbfca3b3b1307f23fd7857a2766f5
  oneThruThree2 :: Data.Set.Base.Set GHC.Base.String
  {- Unfolding: (Data.Set.Base.Bin
                   @ GHC.Base.String
                   1#
                   ParsingFractions.oneThruThree_nm2
                   (Data.Set.Base.Tip @ GHC.Base.String)
                   (Data.Set.Base.Tip @ GHC.Base.String)) -}
ce5320f21ca935de4bafaee08cd6adbc
  oneThruThree3 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   ParsingFractions.main24
                   ParsingFractions.oneThruThree4) -}
9315a0c81a378ca35c986dde6f8996f7
  oneThruThree4 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a3e44c89ef3bd1a5ef6234fc7366adf7
  oneThruThree5 :: Text.Trifecta.Result.Err
  {- Unfolding: (Text.Trifecta.Result.Err
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                   (GHC.Types.[] @ Text.PrettyPrint.ANSI.Leijen.Doc)
                   ParsingFractions.oneThruThree2
                   (GHC.Types.[] @ Text.Trifecta.Delta.Delta)) -}
b1841385b504093ffb32ec1a46fba5ed
  oneThruThree_ds2 :: Text.Trifecta.Parser.Parser ()
  {- Unfolding: (ParsingFractions.oneThruThree_go
                   ParsingFractions.main24) -}
061ce3d297ed6df4d9b0e93a23f33323
  oneThruThree_go ::
    [GHC.Types.Char] -> Text.Trifecta.Parser.Parser ()
  {- Arity: 1, Strictness: <S,1*U> -}
0a7902e5c5ccaf75d96ec97c0f3d41fc
  oneThruThree_nm2 :: GHC.Base.String
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   ParsingFractions.oneThruThree3) -}
50401fa1328291543104f431c7e835bd
  oneTwo :: Text.Trifecta.Parser.Parser GHC.Types.Char
  {- Arity: 6,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.main9
                  `cast`
                (Sym (Text.Trifecta.Parser.N:Parser[0] <GHC.Types.Char>_R)) -}
e9560fe67e260af79c648af8d209eda3
  oneTwo' :: Text.Trifecta.Parser.Parser a
  {- Arity: 6,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.main2
                  `cast`
                (forall (a :: <*>_N).
                 Sym (Text.Trifecta.Parser.N:Parser[0] <a>_R)) -}
d55442130986c083d2e019423b551792
  pNL :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.pNL1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
192c5b820e4a5cd7b8720f9961acbd8a
  pNL1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Types.: @ GHC.Types.Char ParsingFractions.main14 s)
                   GHC.Types.True
                   eta) -}
560a87a1439df878beea1d826b50a82f
  stop :: Text.Trifecta.Parser.Parser a
  {- Arity: 6, Strictness: <L,A><C(S),1*C1(U)><L,A><L,A><L,A><L,A>,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.main3
                  `cast`
                (forall (a :: <*>_N).
                 Sym (Text.Trifecta.Parser.N:Parser[0] <a>_R)) -}
b5bc0a80c95d942be1f5db6f80bf30cf
  stringParse ::
    Text.Trifecta.Parser.Parser GHC.Base.String
    -> GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,C(C1(C1(C1(C1(C1(U))))))><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.stringParse1
                  `cast`
                (<Text.Trifecta.Parser.Parser GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ae69579180ce521c4527ec9da4a68ac9
  stringParse1 ::
    Text.Trifecta.Parser.Parser GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,C(C1(C1(C1(C1(C1(U))))))><L,1*U><S,U>,
     Unfolding: (\ (p :: Text.Trifecta.Parser.Parser GHC.Base.String)
                   (str :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (Text.Trifecta.Result.$fShowResult_$cshow
                      @ [GHC.Types.Char]
                      GHC.Show.$fShow[]_$s$fShow[]1
                      (Text.Trifecta.Parser.parseString
                         @ GHC.Base.String
                         p
                         Text.Trifecta.Delta.$fMonoidDelta_$cmempty
                         str))
                   GHC.Types.True
                   eta) -}
c62f37a86e7db96b7a5c2a7049336e80
  testParse ::
    Text.Trifecta.Parser.Parser GHC.Types.Char -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,C(C1(C1(C1(C1(C1(U))))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                ParsingFractions.main23
                  `cast`
                (<Text.Trifecta.Parser.Parser GHC.Types.Char>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

